https://youtu.be/dBFWEKU8mTg

Drugim plikiem gry, dziêki któremu rozgrywka jest mo¿liwa, jest Border. 
Zawiera ona dwuwymiarow¹ tablicê naszych transformacji - koorydynacji XY obiektów. Ta klasa odpowiada za wszystkie wartosci zwi¹zane z granic¹, po³o¿eniem oraz niszczeniem bloków. Pierwsza metoda - jest to roundedBorders, zaokr¹gla nam wartoœci po³o¿enia z u¿yciem funkcji Mathf z silnika UnityEngine. Drug¹ metod¹ jest bool IsInBorders, którego u¿yliœmy ju¿ wczeœniej w klasie Blocks. Sprawdza ona, czy po³o¿enie przekazango w parametrze Vectora jest poprawne z granicami naszej gry. Nastepna metoda to IsOver, ta funkcja sprawdza czy nasz blok nie znalaz³ siê za wysoko. Dodana do wysokoœci zosta³a wartoœæ 1 ze wzgledu na wyst¹pienie b³êdu i zbyt szybkiego zakoñczenia rozgrywki w przypadku pionowego pojawienia siê bloku o kszta³cie litery "I". Nastêpna metoda nazywa siê AssignBlockToPlace, zwraca ona transformacjê przypisan¹ do naszej dwuwymiarowej tablicy. Nastepna funkcja to IsInArea. Sprawdza ona ka¿dy punkt w naszym obszarze rozgrywki i przypisuje ka¿demu elementowi tablicy poszczególny obiekt. Kolejna metoda sprawdza, czy dany rz¹d jest pe³ny. Jesli tak to zwraca true. Kolejna metoda - DeleteThis usuwa dany rzad. Przedostatnia metoda MoveThat przesuwa wszystkie rzêdy nad tym przekazanym w parametrze. Ostatnia funkcja wywo³uje poprzednio wymienione metody dla ka¿dego rzêdu. Najpierw sprawdzane jest, czy rz¹d jest pe³ny - jeœli tak, to go usuwa, przesuwa wszystkie wy¿ej, zmniejsza wartoœæ rzêdów, oraz zwiêksza wartoœæ howMuchRows. Wartoœæ ta decyduje o tym, ile gracz dostanie punktów - im wiêcej rzêdow naraz zosta³o zniszczonych - tym wiêcej puntków.

Ostatni¹ klasa odpowiadaj¹ca za funkcjonalnoœæ programu jest Game. 
Zawiera ona wartoœci HighScore danego gracza, oraz tworzy nowe bloki. W funkcji Start pobierana zostaje informacja o nawy¿szych wynikach. W pierwszej metodzie typeOfBlock losowany zostaje numer, który decyduje o tym, jaki blok pojawi sie nastepny. Nastepnie w metodzie spawnBlocks zostaje utorzony block o tej nazwie, z losowym wspó³czynnikiem X, oraz sta³¹ wysokoœci¹. funkcja instantiate pozwala na tworzenie kopii obiektów. metoda saveScore zostaje wywo³ywana przy koæcu gry, przed wczytaniem nowej sceny. Sprawdza ona czy obecna iloœæ punktow jest wy¿sza ni¿ poprzednie wyniki, jeœli tak, to zmienia wartoœci highscore. Ostatnia funkcja to Gameover, ktora koñczy rozgrywkê.
Do sceny tetris zosta³y do³¹czone jeszcze dwa male skrypty - GuiHighScore oraz GuiScore, wyœwietlaj¹ one wartoœci najwy¿szych wyników oraz aktualnego wyniku.